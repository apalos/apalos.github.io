<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Volatile rumblings - UEFI</title><link href="https://apalos.github.io/" rel="alternate"></link><link href="https://apalos.github.io/feeds/uefi.atom.xml" rel="self"></link><id>https://apalos.github.io/</id><updated>2022-01-21T09:20:00+02:00</updated><subtitle>Volatile rumblings</subtitle><entry><title>(Cheap) UEFI Measured boot on DeveloperBox</title><link href="https://apalos.github.io/Measured%20boot%20on%20DeveloperBox.html" rel="alternate"></link><published>2022-01-21T09:20:00+02:00</published><updated>2022-01-21T09:20:00+02:00</updated><author><name>Ilias Apalodimas</name></author><id>tag:apalos.github.io,2022-01-21:/Measured boot on DeveloperBox.html</id><summary type="html">&lt;p&gt;UEFI Secure and measured Boot is the minimal basis for a trustworthy device nowadays. &lt;br&gt; Let's take a look on how modern U-Boot with the help of OP-TEE can provide that without any specialized hardware.&lt;/p&gt;</summary><content type="html">&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="overload.css"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;How can measured boot help&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;TPMs are microcontrollers designed for cryptographic tasks. Donâ€™t think of them
as crypto accelerators though, cryptographic operations on your CPU will (almost)
always be faster.&lt;/p&gt;
&lt;p&gt;Even so TPMs have the ability to wrap and tie a key into certain platform measurements.  This is
called key sealing.  The platform measurements are stored in Platform Configuration Registers, or for short, PCRs.
PCRs are zeroed out on the platform boot and can only be reset on a system reboot.
They can be extended by writing a SHA hash (typically SHA-1,256 for TPMv2) into the PCR.
When a PCR is extended the hardware concatenates the new hash to the existing 
PCR value and new SHA is stored.&lt;/p&gt;
&lt;p&gt;U-Boot supports &lt;a href="https://trustedcomputinggroup.org/wp-content/uploads/EFI-Protocol-Specification-rev13-160330final.pdf"&gt;EFI TCG2&lt;/a&gt;.
Its purpose is to define APIs and provide information, for things like, is a TPM 
present, which PCR banks are active,  obtain the TCG boot log, extend hashes to PCRs,
append events to the TCG boot log etc. &lt;/p&gt;
&lt;p&gt;So you can effectively encrypt your root filesystem and store the decryption
key safely in your TPM.  That key will only be released if the TPM PCRs
contain the exact same values that they had when the key was sealed.&lt;/p&gt;
&lt;p&gt;The PCR usage is described
&lt;a href="https://trustedcomputinggroup.org/wp-content/uploads/TCG_PCClient_PFP_r1p05_v23_pub.pdf"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PCR0:&lt;/strong&gt; SRTM, BIOS, Host Platform Extensions, Embedded Option ROMs and PI Drivers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR1:&lt;/strong&gt; Host Platform Configuration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR2:&lt;/strong&gt; UEFI driver and application Code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR3:&lt;/strong&gt; UEFI driver and application Configuration and Data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR4:&lt;/strong&gt; UEFI Boot Manager Code (usually the MBR) and Boot Attempts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR5:&lt;/strong&gt; Boot Manager Code Configuration and Data (for use by the Boot Manager Code) and GPT/Partition Table&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR6:&lt;/strong&gt; Host Platform Manufacturer Specific&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR7:&lt;/strong&gt; Secure Boot Policy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR8-15:&lt;/strong&gt; Defined for use by the Static OS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR16:&lt;/strong&gt; Debug&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCR23:&lt;/strong&gt; Application Support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;Why the DeveloperBox&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;A while ago I explained how storing EFI Variables into an RPMB partition of an 
&lt;a href="https://apalos.github.io/Protected%20UEFI%20variables%20with%20U-Boot.html#Protected%20UEFI%20variables%20with%20U-Boot"&gt;eMMC&lt;/a&gt; works.
There's basically three requirements.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your hardware has OP-TEE support&lt;/li&gt;
&lt;li&gt;A working eMMC in U-Boot and Linux&lt;/li&gt;
&lt;li&gt;Upstream U-Boot support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With an eMMC available we can also use Microsoft's firmware TPM (or &lt;a href="https://github.com/microsoft/ms-tpm-20-ref/"&gt;fTPM&lt;/a&gt;)
and enable measured boot.&lt;/p&gt;
&lt;p&gt;This is the only &lt;a href="https://www.96boards.org/product/developerbox/"&gt;hardware&lt;/a&gt;
I had available which abides to those requirements. 
However what you'll read here applies to any board that has identical features.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Compiling (a lot)&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;There's &lt;strong&gt;a lot&lt;/strong&gt; of firmware components that need to be compiled for this to work.
Just for reference you will need&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ARM-software/SCP-firmware.git"&gt;SCP-firmware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ARM-software/arm-trusted-firmware.git"&gt;TF-A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OP-TEE/optee_os"&gt;OP-TEE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/u-boot/u-boot.git"&gt;U-Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tianocore/edk2.git"&gt;EDK2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tianocore/edk2-platforms.git"&gt;StandAloneMM from edk2-platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/ms-tpm-20-ref/"&gt;fTPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll also need complex instructions on how to compile those and assemble the
image as well as some not (yet) upstreamed patches.
Fortunately there's an OpenEmbedded layer from Linaro that can do this for us
on the DeveloperBox.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://git.codelinaro.org/linaro/dependable-boot/meta-ts.git
&lt;span class="nb"&gt;cd&lt;/span&gt; meta-ts
kas build ci/synquacer.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;strong&gt;Updating the firmware&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;You can find detailed instructions &lt;a href="https://www.96boards.org/documentation/enterprise/developerbox/installation/board-recovery.md.html#update-using-serial-flasher"&gt;here&lt;/a&gt;
The tl;dr version is flip DSW2-7 to enable the serial flasher, open your minicom and use xmodem to
send and update the files.&lt;/p&gt;
&lt;p&gt;All the files you need will be located at &lt;code&gt;build/tmp/deploy/images/synquacer/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;flash write cm3 -&amp;gt;  Control-A S -&amp;gt; send scp_romramfw_release.bin
flash write arm-tf -&amp;gt; Control-A S -&amp;gt; send fip_all_arm_tf_optee.bin
flash rawwrite 0x500000 0x100000  -&amp;gt; Control-A S -&amp;gt; send optee/tee-pager_v2.bin
flash rawwrite 0x200000 0x100000 -&amp;gt; Control-A S -&amp;gt; send u-boot.bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;strong&gt;Install a distro&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;I am using
&lt;a href="https://download.fedoraproject.org/pub/fedora/linux/releases/35/Server/aarch64/iso/Fedora-Server-netinst-aarch64-35-1.2.iso"&gt;Fedora&lt;/a&gt; 
on the example here,  but since the U-Boot versions since 2021.04 are 
SystemReady-IR compliant any COTS distro should work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Fedora-Server-netinst-aarch64-35-1.2.iso &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdX &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;128M &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Plug your usb stick in a port and start up the board.
In U-Boot's console do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usb reset
load usb &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;$kernel_addr_r&lt;/span&gt; efi/boot/BOOTAA64.EFI &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bootefi &lt;span class="nv"&gt;$kernel_addr_r&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since I am using the box in headless mode,  installing via VNC is a nice option to avoid
the console nuisance.&lt;/p&gt;
&lt;p&gt;&lt;img src="site_images/vnc.png" alt="VNC"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make sure you encrypt the filesystem using a password as we'll be 
needing this later on&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="site_images/encrypt.png" alt="Encrypt FS"&gt;&lt;/p&gt;
&lt;p&gt;It's worth noting that since U-Boot does not support SetVariable at runtime you'll get an error
while the installer is trying to update the EFI Boot#### variables.  This is far from fatal,  you
can just continue the installation and fix up the boot options later.&lt;/p&gt;
&lt;p&gt;&lt;img src="site_images/error.png" alt="SetVariable Error"&gt;&lt;/p&gt;
&lt;p&gt;Once the installation completes, you will have 3 partitions: EFI, boot, and the luks encrypted root.&lt;/p&gt;
&lt;p&gt;Reboot your board and stop U-Boot at it's console.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvme scan
efidebug boot add -b &lt;span class="m"&gt;0&lt;/span&gt; Fedora nvme &lt;span class="m"&gt;0&lt;/span&gt; EFI/fedora/shimaa64.efi
efidebug boot order &lt;span class="m"&gt;0&lt;/span&gt;
bootefi bootmgr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That should set SHIM as your first boot choice.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Enabling fTPM&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The kernel modules needed for Microsoft's &lt;a href="https://github.com/microsoft/ms-tpm-20-ref/"&gt;fTPM&lt;/a&gt;
are included in the Fedora35 kernel.  However,  since it relies on OP-TEE to 
provide the RPMB access,  you need to start the TEE supplicant before the module gets inserted.&lt;/p&gt;
&lt;h3&gt;Compiling optee_client&lt;/h3&gt;
&lt;p&gt;On the target system, get a copy of optee_client compile it and install it.  The default installation will end up on
&lt;code&gt;/usr/local/sbin&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/OP-TEE/optee_client.git
&lt;span class="nb"&gt;cd&lt;/span&gt; optee_client &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir build &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; build
cmake ../ -DRPMB_EMU&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
make -j&lt;span class="k"&gt;$(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt;
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Enabling fTPM on systemd&lt;/h3&gt;
&lt;p&gt;Create &lt;code&gt;/etc/systemd/system/tee-supplicant.service&lt;/code&gt;  with the following contents&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tee supplicant

&lt;span class="o"&gt;[&lt;/span&gt;Service&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tee-supplicant
&lt;span class="nv"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;always

&lt;span class="o"&gt;[&lt;/span&gt;Install&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;sysinit.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and enable the service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; tee-supplicant
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you reboot your system now your firmwareTPM should be operational.
You can check the logs with &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo tpm2_eventlog /sys/kernel/security/tpm0/binary_bios_measurements
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Sealing the key&lt;/h3&gt;
&lt;p&gt;Remember when you installed an encrypted filesystem?  With the TPM up and running now
you can automate the decryption of your root filesystem.&lt;/p&gt;
&lt;p&gt;Fedora has clevis,  an automated encryption framework,  which can make your life easier
as far as key sealing and unsealing is concerned.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo dnf install clevis clevis-luks clevis-dracut clevis-udisks2 clevis-systemd
sudo clevis luks &lt;span class="nb"&gt;bind&lt;/span&gt; -d /dev/nvme0n1p3 tpm2 &lt;span class="s1"&gt;&amp;#39;{&amp;quot;pcr_ids&amp;quot;:&amp;quot;0,1,2,3,4,5,6,7&amp;quot;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Adding tee-supplicant to your initramfs&lt;/h3&gt;
&lt;p&gt;As we mentioned the fTPM relies on the op-tee supplicant for the RPMB accesses.  So the missing
piece of the puzzle in order to access your TPM, unseal your key and decrypt the
filesystem,  is create an initramfs with the needed modules and the tee-supplicant.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;/usr/lib/dracut/modules.d/60tee-supplicant/&lt;/code&gt; directory, copy the 
&lt;code&gt;/etc/systemd/system/tee-supplicant.service&lt;/code&gt; we created earlier and&lt;br&gt;
add a &lt;code&gt;module-setup.sh&lt;/code&gt; file with the following contents.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/bash&lt;/span&gt;
check&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    require_binaries /usr/local/sbin/tee-supplicant &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

depends&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

install&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    inst /usr/local/sbin/tee-supplicant /sbin/tee-supplicant
    inst &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$moddir&lt;/span&gt;&lt;span class="s2"&gt;/tee-supplicant.service&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$systemdsystemunitdir&lt;/span&gt;&lt;span class="s2"&gt;/tee-supplicant.service&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$SYSTEMCTL&lt;/span&gt; -q --root &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$initdir&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; add-wants cryptsetup.target tee-supplicant.service
&lt;span class="o"&gt;}&lt;/span&gt;

installkernel&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;hostonly&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;instmods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;drivers/char/tpm
    instmods tee optee
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can now re-create your initramfs with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo dracut --add clevis-pin-tpm2 --add tee-supplicant --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If everything is setup correctly you should see something along the lines of this on your screen&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Welcome to Fedora Linux &lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Server Edition&lt;span class="o"&gt;)&lt;/span&gt; dracut-055-6.fc35 &lt;span class="o"&gt;(&lt;/span&gt;Initramfs&lt;span class="o"&gt;)&lt;/span&gt;!
&amp;lt;snip&amp;gt;
&lt;span class="o"&gt;[&lt;/span&gt;  OK  &lt;span class="o"&gt;]&lt;/span&gt; Reached target Basic System.
         Starting Cryptography Setuâ€¦8ff0-43f6-9484-b4f16ff43093...
&lt;span class="o"&gt;[&lt;/span&gt;  OK  &lt;span class="o"&gt;]&lt;/span&gt; Started tee supplicant.
Please enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; disk Samsung SSD &lt;span class="m"&gt;960&lt;/span&gt; EVO 250GB &lt;span class="o"&gt;(&lt;/span&gt;luks-5fe9fed9-8ff0-43f6-9484-b4f16ff43093&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but this time you won't have to supply a password!&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;UEFI Secure Boot&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;At the time of the writing,  due to toolchain complications,  Fedora isn't
signing their SHIM.  Once this get's fixed we'll follow up on UEFI Secure Boot.&lt;/p&gt;</content><category term="Bootloaders"></category><category term="Security"></category><category term="U-Boot"></category><category term="UEFI"></category><category term="TPM"></category><category term="Measured Boot"></category><category term="Secure Boot"></category></entry><entry><title>EFI TCG2 protocol in U-Boot and QEMU</title><link href="https://apalos.github.io/EFI%20TCG2%20protocol%20in%20U-Boot%20and%20QEMU.html" rel="alternate"></link><published>2021-08-31T10:20:00+03:00</published><updated>2021-08-31T10:20:00+03:00</updated><author><name>Ilias Apalodimas</name></author><id>tag:apalos.github.io,2021-08-31:/EFI TCG2 protocol in U-Boot and QEMU.html</id><summary type="html">&lt;p&gt;TPMs are starting to play an important role in system security and integrity. &lt;br&gt;So let's take a look on the latest U-Boot additions enabling TPMs when booting with UEFI&lt;/p&gt;</summary><content type="html">&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="overload.css"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Do I need a TPM?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;I won't go into details regarding why a TPM is useful.  There is an excellent 
&lt;a href="https://mjg59.dreamwidth.org/57199.html" target="_blank"&gt;article&lt;/a&gt; 
from Matthew Garrett on that, but the short answer is "yes you do".&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;U-Boot Support&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;There's a spec defining a standard interface to the TPM on an UEFI platform.
It's purpose is to define APIs and provide information, for things like, 
is a TPM present, which PCR banks are active, change active PCR banks, obtain the TCG boot log, 
extend hashes to PCRs, and append events to the TCG boot log etc.&lt;/p&gt;
&lt;p&gt;U-Boot recently got support for this as well as support for the 
&lt;a href="https://trustedcomputinggroup.org/wp-content/uploads/TCG_PCClient_PFP_r1p05_v22_02dec2020.pdf" target="_blank"&gt;TCG PC Client Platform Firmware Profile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Patches can be found
&lt;a href="https://lore.kernel.org/u-boot/20201112222210.876652-1-ilias.apalodimas@linaro.org/" target="_blank"&gt; here&lt;/a&gt;, 
&lt;a href="https://lore.kernel.org/u-boot/20201127162932.1965323-1-ilias.apalodimas@linaro.org/" target="_blank"&gt;here&lt;/a&gt;
and
&lt;a href="https://lore.kernel.org/u-boot/20210813071243.18885-1-masahisa.kojima@linaro.org/" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finding an Arm device with with a TPMv2 can prove hard.  So it would be useful
to emulate that in software.  If you have a board with an RPMB and OP-TEE support,
I suggest you try Microsoft's &lt;a href="https://github.com/microsoft/ms-tpm-20-ref/" target="_blank"&gt;fTPM&lt;/a&gt;.
However testing that in QEMU won't work since it lacks RPMB emulation.  Luckily
there's another solution.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Using SWTPM&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/stefanberger/swtpm" target="_blank"&gt;SWTPM&lt;/a&gt; is a
TPM emulator that works under QEMU.  It provides a memory mapped device which
adheres to the &lt;a href="https://trustedcomputinggroup.org/wp-content/uploads/TCG_PCClientTPMInterfaceSpecification_TIS__1-3_27_03212013.pdf" target="_blank"&gt;TCG TPM Interface Specification&lt;/a&gt;.
The problem is that U-Boot had no support for memory mapped TPMs,  which is
exactly what &lt;a href="https://lore.kernel.org/u-boot/20211109070223.76456-1-ilias.apalodimas@linaro.org/" target="_blank"&gt;this&lt;/a&gt; patchset does.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Building U-Boot&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;s&gt;At the time of this article the U-Boot patches are under review, so we need to
apply them manually.&lt;/p&gt;
&lt;p&gt;So download the patches prepare your U-Boot binary.&lt;/s&gt;
Patches are now in U-Boot mainline and the arm64 defconfig has the
required config options enabled.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/u-boot/u-boot.git
&lt;span class="nb"&gt;pushd&lt;/span&gt; u-boot
make qemu_arm64_defconfig
make menuconfig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We need to enable the TPMv2 support in U-Boot 
&lt;code&gt;CONFIG_TPM&lt;/code&gt;,  &lt;code&gt;CONFIG_CMD_TPM&lt;/code&gt;,  &lt;code&gt;CONFIG_TPM2_MMIO&lt;/code&gt; must be enabled.  Once
those are selected &lt;code&gt;CONFIG_EFI_TCG2_PROTOCOL&lt;/code&gt; should be automatically included.
Make sure you enable &lt;code&gt;CONFIG_CMD_EFIDEBUG&lt;/code&gt;,  since we will need it to boot our
kernel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make -j &lt;span class="k"&gt;$(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;popd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Running QEMU&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Make sure swtpm is installed and running on your system.  For debian and friends 
there's a swtpm package, so just do &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install swtpm
mkdir /tmp/mytpm1
swtpm socket --tpmstate &lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp/mytpm1 &lt;span class="se"&gt;\&lt;/span&gt;
    --ctrl &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;unixio,path&lt;span class="o"&gt;=&lt;/span&gt;/tmp/mytpm1/swtpm-sock &lt;span class="se"&gt;\&lt;/span&gt;
    --log &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt; --tpm2 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and launch QEMU with swtpm support&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo qemu-system-aarch64 &lt;span class="se"&gt;\&lt;/span&gt;
    -bios u-boot.bin &lt;span class="se"&gt;\&lt;/span&gt;
    -machine virt,gic-version&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;,accel&lt;span class="o"&gt;=&lt;/span&gt;kvm &lt;span class="se"&gt;\&lt;/span&gt;
    -cpu host -m 4G &lt;span class="se"&gt;\&lt;/span&gt;
    -nographic -no-acpi &lt;span class="se"&gt;\&lt;/span&gt;
    -chardev socket,id&lt;span class="o"&gt;=&lt;/span&gt;chrtpm,path&lt;span class="o"&gt;=&lt;/span&gt;/tmp/mytpm1/swtpm-sock &lt;span class="se"&gt;\&lt;/span&gt;
    -tpmdev emulator,id&lt;span class="o"&gt;=&lt;/span&gt;tpm0,chardev&lt;span class="o"&gt;=&lt;/span&gt;chrtpm &lt;span class="se"&gt;\&lt;/span&gt;
    -device tpm-tis-device,tpmdev&lt;span class="o"&gt;=&lt;/span&gt;tpm0 &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disk0,file&lt;span class="o"&gt;=&lt;/span&gt;rootfs-linaro-buster-raw-unknown-20200720-440.ext4,if&lt;span class="o"&gt;=&lt;/span&gt;none,format&lt;span class="o"&gt;=&lt;/span&gt;raw &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-blk-device,drive&lt;span class="o"&gt;=&lt;/span&gt;disk0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Booting linux&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;From U-Boot's command line do something along the lines of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tpm2 startup TPM2_SU_CLEAR &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; virtio scan 
efidebug boot add -b ABE0 &lt;span class="s1"&gt;&amp;#39;kernel&amp;#39;&lt;/span&gt; virtio &lt;span class="m"&gt;0&lt;/span&gt; boot/Image -s &lt;span class="s1"&gt;&amp;#39;root=/dev/vda&amp;#39;&lt;/span&gt;
efidebug boot order ABE0
bootefi bootmgr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If everything is compiled and launched correctly, you should see the kernel
reporting the location of some related EventLog pointers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="go"&gt;efi: EFI v2.80 by Das U-Boot&lt;/span&gt;
&lt;span class="go"&gt;efi: TPMFinalLog=0x13ddcc040 RTPROP=0x13ddcb040 SMBIOS=0xffffe000 TPMEventLog=0x13ddc4040 MEMRESERVE=0x13ddc3040 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Reading the EventLog&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;I am using a debian .ext4 image, where I have installed the latest tpm2 tools. 
If you don't have them install them with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install tpm2-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The kernel exposes the eventlog in /sys.  So you can read it with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;tpm2_eventlog&lt;/span&gt; &lt;span class="sr"&gt;/sys/&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpm0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;binary_bios_measurements&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="ss"&gt;events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_NO_ACTION&lt;/span&gt;
    &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0000000000000000000000000000000000000000&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;
    &lt;span class="ss"&gt;SpecID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;Signature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Spec&lt;/span&gt; &lt;span class="no"&gt;ID&lt;/span&gt; &lt;span class="no"&gt;Event03&lt;/span&gt;
        &lt;span class="ss"&gt;platformClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="ss"&gt;specVersionMinor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="ss"&gt;specVersionMajor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="ss"&gt;specErrata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="ss"&gt;uintnSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="ss"&gt;numberOfAlgorithms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="ss"&gt;Algorithms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Algorithm&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="ss"&gt;algorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
            &lt;span class="ss"&gt;digestSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Algorithm&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="ss"&gt;algorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
            &lt;span class="ss"&gt;digestSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;
        &lt;span class="ss"&gt;vendorInfoSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_S_CRTM_VERSION&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0772fd675fbebcdd4401008ee8d609760c1675df&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;69f66450f9a8780cf2fbab358d46b8fabd4b7e9ae886b3d80083646c30e91b4c&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;552d426f6f7420323032312e31302d7263322d30303031302d67643536666231666138352d646972747920284175672032342032303231202d2030363a33343a3335202b303830302900&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_VARIABLE_DRIVER_CONFIG&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;57cd4dc19442475aa82743484f3b1caa88e142b8&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;115aa827dbccfb44d216ad9ecfda56bdea620b860a94bed5b7a27bba1c4d02d8&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;VariableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="n"&gt;dfe48b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca93&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d211&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aa0d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="n"&gt;e098032b8c&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeNameLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
      &lt;span class="ss"&gt;VariableDataLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;SecureBoot&lt;/span&gt;
      &lt;span class="ss"&gt;VariableData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_VARIABLE_DRIVER_CONFIG&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9b1387306ebb7ff8e795e7be77563666bbf4516e&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dea7b80ab53a3daaa24d5cc46c64e1fa9ffd03739f90aadbd8c0867c4a5b4890&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;VariableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="n"&gt;dfe48b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca93&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d211&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aa0d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="n"&gt;e098032b8c&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeNameLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
      &lt;span class="ss"&gt;VariableDataLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;PK&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_VARIABLE_DRIVER_CONFIG&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9afa86c507419b8570c62167cb9486d9fc809758&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e670e121fcebd473b8bc41bb801301fc1d9afa33904f06f7149b74f12c47a68f&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;VariableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="n"&gt;dfe48b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca93&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d211&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aa0d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="n"&gt;e098032b8c&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeNameLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
      &lt;span class="ss"&gt;VariableDataLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;KEK&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_VARIABLE_DRIVER_CONFIG&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5bf8faa078d40ffbd03317c93398b01229a0e1e0&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;baf89a3ccace52750c5f0128351e0422a41597a1adfd50822aa363b9d124ea7c&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;VariableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cbb219d7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a3d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9645&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a3bc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dad00e67656f&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeNameLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
      &lt;span class="ss"&gt;VariableDataLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_VARIABLE_DRIVER_CONFIG&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;734424c9fe8fc71716c42096f4b74c88733b175e&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9f75b6823bff6af1024a4e2036719cdd548d3cbc2bf1de8e7ef4d0ed01f94bf9&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;VariableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cbb219d7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a3d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9645&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a3bc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dad00e67656f&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeNameLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
      &lt;span class="ss"&gt;VariableDataLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="ss"&gt;UnicodeName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dbx&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_BOOT_SERVICES_APPLICATION&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d2702383b2e042ebefbb318f9382fd094c1c2d6b&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;8fb6a4c7a0c7e7f22b944906eb07786cd3860394c7929e7c0768b2c99a2a3d87&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;162&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="ss"&gt;ImageLocationInMemory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x7adb3000&lt;/span&gt;
      &lt;span class="ss"&gt;ImageLengthInMemory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;893720&lt;/span&gt;
      &lt;span class="ss"&gt;ImageLinkTimeAddress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x0&lt;/span&gt;
      &lt;span class="ss"&gt;LengthOfDevicePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;130&lt;/span&gt;
      &lt;span class="ss"&gt;DevicePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;01041400b9731de684a3cc4aaeab82e828f3628b031d050002031d05000104012a0001000000009800000000000000f805000000000050641c65888b6b418f2257061a9dc3c50202040436005c004500460049005c00640065006200690061006e005c007300680069006d0061006100360034002e0065006600690000007fff0400&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Unknown&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;50eb6bd100c48e81644d666a437725f49c6aed3c&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eb881b78feeb95756141a8d5358b891b297fad61b296f667de1f59b66bc92f4f&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;61dfe48bca93d211aa0d00e098032b8c0900000000000000020000000000000042006f006f0074004f0072006400650072000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Unknown&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;74e29a0674816dfdfc2c2e9cbbcec357132da4e8&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5d123811f51e2e46c437c7e88e07053c81f4e63da3f11de8a8a2afb5334db137&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;198&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;61dfe48bca93d211aa0d00e098032b8c0800000000000000960000000000000042006f006f0074003000300030003000010000008200640065006200690061006e00000001041400b9731de684a3cc4aaeab82e828f3628b031d050002031d05000104012a0001000000009800000000000000f805000000000050641c65888b6b418f2257061a9dc3c50202040436005c004500460049005c00640065006200690061006e005c007300680069006d0061006100360034002e0065006600690000007fff0400&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_ACTION&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cd0fdb4531a6ec41be2753ba042637d6e5f7f256&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3d6772b4f84ed47595d72a2c4c5ffd15f5bb72c7507fe26f2aaee2c69d5633ba&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Calling EFI Application from Boot Option&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_SEPARATOR&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9069ca78e7450a285173431b3e52c5c25299e473&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;00000000&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_ACTION&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;443a6b7b82b7af564f2e393cd9d5a388b7fa4a98&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d8043d6b7b85ad358eb3b6ae6a873ab7ef23a26352c5dc4faa5aeedacf5eb41b&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Exit Boot Services Invocation&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;EventNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="ss"&gt;PCRIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="ss"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;EV_EFI_ACTION&lt;/span&gt;
    &lt;span class="ss"&gt;DigestCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="ss"&gt;Digests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;475545ddc978d7bfd036facc7e2e987f48189f0d&amp;quot;&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;AlgorithmId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
        &lt;span class="ss"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b54f7542cbd872a81a9d9dea839b2b8d747c7ebd5ea6615c40f42f44a6dbeba0&amp;quot;&lt;/span&gt;
    &lt;span class="ss"&gt;EventSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;
    &lt;span class="ss"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Exit Boot Services Returned with Success&amp;#39;&lt;/span&gt;
&lt;span class="ss"&gt;pcrs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="ss"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x3e26be54f5f15140afbe509cc4580538d979598d&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x5b4c188c39baa249f688460a63b68df6d3d3ec94&lt;/span&gt;
    &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xb2a83b0ebf2f8374299a5b2bdfc31ea955ad7236&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xb2a83b0ebf2f8374299a5b2bdfc31ea955ad7236&lt;/span&gt;
    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x260ae65533f38ab643f157bd176c72f9fdece410&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xd16d7e629fd8d08ca256f9ad3a3a1587c9e6cc1b&lt;/span&gt;
    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xb2a83b0ebf2f8374299a5b2bdfc31ea955ad7236&lt;/span&gt;
    &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x518bd167271fbb64589c61e43d8c0165861431d8&lt;/span&gt;
  &lt;span class="ss"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x7f35c1ef1bb7b9d2aee58ec4c36cf384d70524c2ce2b6801772d7fdb1d2b5f5a&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xf35b74319598e48a6a69a6a04e903a872558b891563b0af23c877c8472c277a6&lt;/span&gt;
    &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x3d458cfe55cc03ea1f443f1562beec8df51c75e14a9fcf9a7234a13f198e7969&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x3d458cfe55cc03ea1f443f1562beec8df51c75e14a9fcf9a7234a13f198e7969&lt;/span&gt;
    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xbe4d7464e3a3c0a04040355368006a5fbe02c0ef232c8c18926df9b718374f36&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xa5ceb755d043f32431d63e39f5161464620a3437280494b5850dc1b47cc074e0&lt;/span&gt;
    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x3d458cfe55cc03ea1f443f1562beec8df51c75e14a9fcf9a7234a13f198e7969&lt;/span&gt;
    &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x65caf8dd1e0ea7a6347b635d2b379c93b9a1351edc2afc3ecda700e534eb3068&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Bootloaders"></category><category term="Security"></category><category term="U-Boot"></category><category term="UEFI"></category><category term="TPM"></category></entry><entry><title>Protected UEFI variables with U-Boot</title><link href="https://apalos.github.io/Protected%20UEFI%20variables%20with%20U-Boot.html" rel="alternate"></link><published>2020-12-19T10:20:00+02:00</published><updated>2020-12-19T10:20:00+02:00</updated><author><name>Ilias Apalodimas</name></author><id>tag:apalos.github.io,2020-12-19:/Protected UEFI variables with U-Boot.html</id><summary type="html">&lt;p&gt;Critical system variables, like the UEFI ones, must be protected against a variety of attacks. &lt;br&gt;On Arm servers and desktops, which typically run EDK2, dedicated flashes are used. Those &lt;br&gt; would normally be accessible from the secure world only, since they are storing critical &lt;br&gt; variables for our systems integrity and security. &lt;br&gt;&lt;br&gt; But what's the status of devices running on U-Boot?&lt;/p&gt;</summary><content type="html">&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="overload.css"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Intro&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Critical system variables,  like the UEFI ones,  must be protected against a variety of attacks.
On Arm servers and desktops, which typically run EDK2, dedicated flashes are used.  Those would
normally be accessible from the secure world only,  since they are storing critical variables for
our systems integrity and security.&lt;/p&gt;
&lt;p&gt;What about smaller embedded systems though?  Those don't typically run EDK2 nor do they have
special dedicated flashes. Those systems usually use U-Boot.  Prior to 2019 U-Boot was using it's
environment to store EFI variables. Although that was fine for the initial UEFI implementation,  it
imposed limitations to platforms that wanted to store variables securely and in the long run,
implement UEFI Secure Boot.&lt;/p&gt;
&lt;p&gt;Embedded devices with a dedicated flash in Secure World are rare though (anyone aware of any?).
What's becoming more common though is eMMC flashes with an RPMB partition.  Wouldn't it be nice to
store the EFI variables in that?  We would then inherit the RPMB Authentication and protection
against Replay Attacks and use a non-volatile storage we trust more due to it's built-in security
characteristics.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;More problems&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In the Arm ecosystem and it's Trusted Firmware you have,  up to now (and prior to Arm8.4),  two ways
of dispatching payloads to the Secure world.  The first one is called &lt;strong&gt;&lt;em&gt;Secure Partition Manager&lt;/em&gt;&lt;/strong&gt;
or in short SPM.  This is what EDK2 uses,  when compiled for Arm,  to spawn &lt;strong&gt;&lt;em&gt;StandAloneMM&lt;/em&gt;&lt;/strong&gt;,  the
component used for the variable management and storage.&lt;/p&gt;
&lt;p&gt;The second one is called SPD or &lt;strong&gt;&lt;em&gt;Secure Payload Dispatcher&lt;/em&gt;&lt;/strong&gt;.  This is what OP-TEE is using today.
The problem is that those two are mutually exclusive.  So you can either store EFI variables
securely or run OP-TEE.  Small devices,  with limited hardware have a lot to gain when using a
secure OS though.  The first thing that comes in mind is running a FirmwareTPM or a secure client
that takes care of the on-boarding process for small IoT devices.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Less code to the rescue&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;We could of course rewrite StandAloneMM as a Trusted Application for OP-TEE.  The application is
huge though, the final binary for EDK2 is ~2.5MB and quite complex.  Wouldn't we be better off with
an application that's been working for a couple of years?  But can we run it directly in OP-TEE?
That way we can get the best of both worlds. Re-use an existing application which will manage our
variables securely and maintain the ability to run a Secure OS.&lt;/p&gt;
&lt;p&gt;It turns out that the StandAloneMM binary is self-relocatable,  so as long as we manage to jump on
the first instruction,  everything will just 'work'.  We would of course need code in OP-TEE to
launch the new partition and in U-Boot to communicate with that partition,  but that should be way
less, or at least that's what we assumed.&lt;/p&gt;
&lt;p&gt;And less it was!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/OP-TEE/optee_os/commit/42471ecf25b7/" target="_blank"&gt;OP-TEE&lt;/a&gt;
and
&lt;a href="https://github.com/u-boot/u-boot/commit/f042e47e8fb4/" target="_blank"&gt;U-Boot&lt;/a&gt;
already got patches for that and EDK2 patches are currently &lt;s&gt;on upstream review&lt;/s&gt;
upstreamed.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Combining it all together&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;So far I've talked about variable management and internal details of Arm's Secure World. We've also
managed to run StandAloneMM as part of OP-TEE, but who's responsible for reading and storing the
variables eventually?&lt;/p&gt;
&lt;p&gt;StandAloneMM includes the driver that implements the accesses to our hardware. EDK2 calls this
&lt;strong&gt;&lt;em&gt;Firmware Volume Block Protocol&lt;/em&gt;&lt;/strong&gt; and it's designed to provide control over block-oriented firmware
devices.  So the missing link is a StandAloneMM FVB that can re-use OP-TEE and it's ability to
access our RPMB partition securely,  something like &lt;a href="https://git.linaro.org/people/ilias.apalodimas/edk2-platforms.git/tree/Drivers/OpTeeRpmb/OpTeeRpmbFvb.c?h=ffa_svc_optional_on_upstream" target="_blank"&gt;this.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you combine all of the above, the final architecture looks like this!&lt;/p&gt;
&lt;p&gt;&lt;img src="site_images/stmm.png" alt="OP-TEE StMM"&gt;&lt;/p&gt;
&lt;p&gt;An obvious downside is that you need to compile 4 different projects to get your final firmware.
On the other hand if we choose to make it a TA (Trusted Application) we use &lt;s&gt;only&lt;/s&gt; 3, but you'd
have to compile that extra TA and link it to OP-TEE as an EarlyTA anyway.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Building&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;Building TFA&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir firmware &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; firmware/
git clone https://github.com/ARM-software/arm-trusted-firmware
&lt;span class="nb"&gt;pushd&lt;/span&gt; arm-trusted-firmware/
make &lt;span class="nv"&gt;CROSS_COMPILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aarch64-linux-gnu- &lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aarch64 &lt;span class="nv"&gt;PLAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;board&amp;gt; &lt;span class="nv"&gt;TARGET_BOARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;board&amp;gt; &lt;span class="nv"&gt;SPD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;opteed
&lt;span class="nb"&gt;popd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Building EDK2&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;At the time of this article the EDK2 patchset is under review&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/tianocore/edk2.git
git clone https://github.com/tianocore/edk2-platforms.git
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKSPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PACKAGES_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/edk2:&lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/edk2-platforms
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ACTIVE_PLATFORM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Platform/StandaloneMm/PlatformStandaloneMmPkg/PlatformStandaloneMmRpmb.dsc&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GCC5_AARCH64_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aarch64-linux-gnu-
&lt;span class="nb"&gt;pushd&lt;/span&gt; edk2/
git submodule init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git submodule update --init --recursive
&lt;span class="nb"&gt;popd&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; edk2/edksetup.sh
make -C edk2/BaseTools
build -p &lt;span class="nv"&gt;$ACTIVE_PLATFORM&lt;/span&gt; -b RELEASE -a AARCH64 -t GCC5 -n &lt;span class="k"&gt;$(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The StandAloneMM binary is located at &lt;strong&gt;Build/MmStandaloneRpmb/RELEASE_GCC5/FV/BL32_AP_MM.fd&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Building OP-TEE&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/OP-TEE/optee_os.git
cp Build/MmStandaloneRpmb/RELEASE_GCC5/FV/BL32_AP_MM.fd optee_os/
&lt;span class="nb"&gt;pushd&lt;/span&gt; optee_os/
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm
&lt;span class="nv"&gt;CROSS_COMPILE32&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm-linux-gnueabihf- make -j32 &lt;span class="nv"&gt;CFG_ARM64_core&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y &lt;span class="nv"&gt;PLATFORM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;plat&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;CFG_STMM_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;BL32_AP_MM.fd &lt;span class="nv"&gt;CFG_RPMB_FS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y &lt;span class="nv"&gt;CFG_RPMB_FS_DEV_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;dev id &lt;span class="m"&gt;0&lt;/span&gt;,1 etc&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;CFG_CORE_HEAP_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;524288&lt;/span&gt; &lt;span class="nv"&gt;CFG_CORE_DYN_SHM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y &lt;span class="nv"&gt;CFG_RPMB_WRITE_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;CFG_REE_FS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;n &lt;span class="nv"&gt;CFG_CORE_ARM64_PA_BITS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="nv"&gt;CFG_SCTLR_ALIGNMENT_CHECK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;n &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nb"&gt;popd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span style="color:red"&gt;&lt;u&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;&lt;/u&gt;&lt;/span&gt;: OP-TEE will program the RPMB key
(which is one time programmable).  If your platform port of OP-TEE doesn't have a way of retrieving
a secure key from the hardware you might end up with the default &lt;code&gt;CFG_RPMB_TESTKEY&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Building U-Boot&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You'll need to enable U-Boot's extra configuration options to enable this.  So clone U-Boot, apply
your board defconfig and enable these options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/u-boot/u-boot.git
&lt;span class="nb"&gt;pushd&lt;/span&gt; u-boot/
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CROSS_COMPILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aarch64-linux-gnu-
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm64
&lt;span class="nb"&gt;pushd&lt;/span&gt; u-boot
make menuconfig ---&amp;gt; Enable the required options

&lt;span class="nv"&gt;CONFIG_OPTEE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y
&lt;span class="nv"&gt;CONFIG_CMD_OPTEE_RPMB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y
&lt;span class="nv"&gt;CONFIG_EFI_MM_COMM_TEE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y

make -j &lt;span class="k"&gt;$(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;popd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: U-Boot currently only supports dynamic shared memory to communicate with OP-TEE.
Your board's OP-TEE port should register that memory in &lt;strong&gt;./core/arch/arm/plat-platform/main.c&lt;/strong&gt;
or define it in your platform DTS file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;register_ddr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DRAM0_BASE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DRAM0_SIZE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;---&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;board&lt;/span&gt; &lt;span class="n"&gt;specific&lt;/span&gt; &lt;span class="n"&gt;ranges&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You'll otherwise get an error trying to probe OP-TEE.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Assembling the final image and testing&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Each board has, unfortunately,  it's own way of creating the final firmware image.  The build steps
for EDK2 and ArmTrustedFirmware should be standard.  For assembling the final image containing
TF-A, OP-TEE and U-Boot refer to the vendor manual.&lt;/p&gt;
&lt;p&gt;On your first boot, if the RPMB key is not programmed, OP-TEE will do that for you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D/TC:?? &lt;span class="m"&gt;00&lt;/span&gt; tee_rpmb_write_and_verify_key:1069 RPMB INIT: Writing Key value:
D/TC:?? &lt;span class="m"&gt;00&lt;/span&gt; tee_rpmb_write_and_verify_key:1070 00000000fc142dc0  xx xx xx xx xx xx xx xx  xx xx xx xx xx xx xx xx
D/TC:?? &lt;span class="m"&gt;00&lt;/span&gt; tee_rpmb_write_and_verify_key:1070 00000000fc142dd0  xx xx xx xx xx xx xx xx  xx xx xx xx xx xx xx xx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Print variables&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Notice OP-TEE probing before accessing the variables &lt;strong&gt;OP-TEE: revision 3.11 (e6e7781f)&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; printenv -e
Found &lt;span class="m"&gt;2&lt;/span&gt; disks
OP-TEE: revision &lt;span class="m"&gt;3&lt;/span&gt;.11 &lt;span class="o"&gt;(&lt;/span&gt;e6e7781f&lt;span class="o"&gt;)&lt;/span&gt;
SetupMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
SignatureSupport:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x40
SecureBoot:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
certdbv:
    d9bee56e-75dc-49d9-b4d7-b534210f637a
    &lt;span class="m"&gt;2103&lt;/span&gt;-11-19 &lt;span class="m"&gt;18&lt;/span&gt;:43:00
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;AT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x4
AuditMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
DeployedMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
VendorKeys:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
PlatformLangCodes:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x6
OsIndicationsSupported:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x8
CustomMode:
    c076ec0c-7028-4399-a072-71ee5c448b9f
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
certdb:
    d9bee56e-75dc-49d9-b4d7-b534210f637a
    &lt;span class="m"&gt;2103&lt;/span&gt;-11-19 &lt;span class="m"&gt;18&lt;/span&gt;:43:00
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;RT&lt;span class="p"&gt;|&lt;/span&gt;AT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x4
VendorKeysNv:
    9073e4e0-60ec-4b6e-9903-4c223c260f3c
    &lt;span class="m"&gt;2103&lt;/span&gt;-11-19 &lt;span class="m"&gt;18&lt;/span&gt;:43:00
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;AT&lt;span class="p"&gt;|&lt;/span&gt;RO, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x1
PlatformLang:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;RT, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x6
Boot0000:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;RT, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x78
BootOrder:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;RT, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;0x2&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Set/Get a variable&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; setenv -e -nv -bs -rt test2 &lt;span class="nv"&gt;test2&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; printenv -e test2
test2:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV&lt;span class="p"&gt;|&lt;/span&gt;BS&lt;span class="p"&gt;|&lt;/span&gt;RT, &lt;span class="nv"&gt;DataSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;0x5&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Check available storage&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;efidebug&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nv&lt;/span&gt;
&lt;span class="n"&gt;Max&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;16284&lt;/span&gt;
&lt;span class="n"&gt;Remaining&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;15188&lt;/span&gt;
&lt;span class="n"&gt;Max&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;8132&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;strong&gt;Next Steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Since U-Boot's EFI support is getting richer I'll try installing Debian on Armv8 designed to work 
as a &lt;a href="https://www.solid-run.com/arm-servers-networking-platforms/honeycomb-workstation/" target="_blank"&gt;workstation&lt;/a&gt;&lt;/p&gt;</content><category term="Bootloaders"></category><category term="Security"></category><category term="U-Boot"></category><category term="UEFI"></category><category term="Arm"></category></entry></feed>